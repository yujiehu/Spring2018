as.vector(mydata[[1]])
for (i in 1:4){
mydata[i]<-sample.int(n = nrow(iris), size = 100, replace = F)
train_label[i]<-iris[mydata[[i]],5]
test_label[i]<-iris[-as.vector(mydata[[i]]),5]
trainlist[[i]]<-iris[mydata[[i]], 1:4]
testlist[[i]]<-iris[-mydata[[i]], 1:4]
}
as.vector(mydata[[1]])
-as.vector(mydata[[1]])
library(datasets)
#a
library(class)
set.seed(1)
sample <- sample.int(n = nrow(iris), size = 100, replace = F)
train <- iris[sample, 1:4]
test  <- iris[-sample, 1:4]
train_label<-iris[sample,5]
test_label<-iris[-sample,5]
#b
test_pred<-knn(train, test,cl=train_label, k = 3)
table(test_label,test_pred)
# Only two are misclassified. It is versicolor in test dataset but predicted to be virginica.
sample
-sample
iris[mydata[[i]],5]
iris[-mydata[[i]],5]
test_label[1]<-iris[-mydata[[1]],5]
test_label <- data.frame(test1_lable = numeric(50), test2_lable = numeric(50),
test3_lable = numeric(50), test4_lable=numeric(50))
for (i in 1:4){
mydata[i]<-sample.int(n = nrow(iris), size = 100, replace = F)
train_label[i]<-iris[mydata[[i]],5]
test_label[i]<-iris[-mydata[[i]],5]
trainlist[[i]]<-iris[mydata[[i]], 1:4]
testlist[[i]]<-iris[-mydata[[i]], 1:4]
}
set.seed(2)
mydata <- data.frame(sample1 = numeric(100), sample2 = numeric(100),
sample3 = numeric(100), sample4=numeric(100))
train_label <- data.frame(train1_lable = numeric(100), train2_lable = numeric(100),
train3_lable = numeric(100), train4_lable=numeric(100))
test_label <- data.frame(test1_lable = numeric(50), test2_lable = numeric(50),
test3_lable = numeric(50), test4_lable=numeric(50))
trainlist<-list(train1=data.frame(),train2=data.frame(),
train3=data.frame(),train4=data.frame())
testlist<-list(test1=data.frame(),test2=data.frame(),
test3=data.frame(),test4=data.frame())
for (i in 1:4){
mydata[i]<-sample.int(n = nrow(iris), size = 100, replace = F)
train_label[i]<-iris[mydata[[i]],5]
test_label[i]<-iris[-mydata[[i]],5]
trainlist[[i]]<-iris[mydata[[i]], 1:4]
testlist[[i]]<-iris[-mydata[[i]], 1:4]
}
k = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 30, 40, 50)
table(test_label[[1]],knn(trainlist[[1]],testlist[[1]],cl=train_label[[1]], k = k[1])
)
#b<-c(1:length(k))
for (i in 1:4){
for (j in 1:length(k)){
test_pred[i,j]<-sum(diag(table(test_label[[1]],knn(trainlist[[i]],testlist[[i]],cl=train_label[[i]], k = k[i]))))
}
}
diag(table(test_label[[1]],knn(trainlist[[1]],testlist[[1]],cl=train_label[[1]], k = k[1])))
#b<-c(1:length(k))
for (i in 1:4){
for (j in 1:length(k)){
test_pred[i,j]<-sum(diag(table(test_label[[i]],knn(trainlist[[i]],testlist[[i]],cl=train_label[[i]], k = k[i]))))
}
}
sum(diag(table(test_label[[1]],knn(trainlist[[1]],testlist[[1]],cl=train_label[[1]], k = k[1]))))
#b<-c(1:length(k))
for (i in 1:4){
for (j in 1:length(k)){
test_pred[i,j]<-sum(diag(table(test_label[[i]],knn(trainlist[[i]],testlist[[i]],cl=train_label[[i]], k = k[j]))))
}
}
set.seed(2)
mydata <- data.frame(sample1 = numeric(100), sample2 = numeric(100),
sample3 = numeric(100), sample4=numeric(100))
train_label <- data.frame(train1_lable = numeric(100), train2_lable = numeric(100),
train3_lable = numeric(100), train4_lable=numeric(100))
test_label <- data.frame(test1_lable = numeric(50), test2_lable = numeric(50),
test3_lable = numeric(50), test4_lable=numeric(50))
trainlist<-list(train1=data.frame(),train2=data.frame(),
train3=data.frame(),train4=data.frame())
testlist<-list(test1=data.frame(),test2=data.frame(),
test3=data.frame(),test4=data.frame())
for (i in 1:4){
mydata[i]<-sample.int(n = nrow(iris), size = 100, replace = F)
train_label[i]<-iris[mydata[[i]],5]
test_label[i]<-iris[-mydata[[i]],5]
trainlist[[i]]<-iris[mydata[[i]], 1:4]
testlist[[i]]<-iris[-mydata[[i]], 1:4]
}
k = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 30, 40, 50)
#test_pred <- data.frame(test1_pred = numeric(length(k)), test2_pred =numeric(length(k)), test3_pred = numeric(length(k)), test4_pred=numeric(length(k)))
test_pred <- matrix(nrow=4,ncol=length(k))     #创建空的矩阵
#b<-c(1:length(k))
for (i in 1:4){
for (j in 1:length(k)){
test_pred[i,j]<-sum(diag(table(test_label[[i]],knn(trainlist[[i]],testlist[[i]],cl=train_label[[i]], k = k[j]))))
}
}
#b<-c(1:length(k))
for (i in 1:4){
for (j in 1:length(k)){
test_pred[i,j]<-50-sum(diag(table(test_label[[i]],knn(trainlist[[i]],testlist[[i]],cl=train_label[[i]], k = k[j]))))
}
}
test_pred
class(test_pred)
for (i in 1:4){
for (j in 1:length(k)){
cat("the misclassified number for set",i,"according to each k is",test_pred[i,j],"\n")
}
}
for (i in 1:4){
for (j in 1:length(k)){
}
cat("the misclassified number for set",i,"according to each k is",test_pred[i,],"\n")
}
misclassed
mis<-as.data.frame(test_pred)
View(mis)
names(mis)<-k
rownames(mis)<-c("set1","set2","set3","set4")
originalset<-misclassed
orginalset<-misclassed
mis<-rbind(mis,originalset)
rownames(mis)[5]<-"originalset"
plot(k,mis[set1])
plot(k,mis[1,)
plot(k,mis[1,])
plot(k,mis[1,],type="b")
plot(k,mis[1:3,],type="b")
plot(k,mis[1,],type="b")
lines(k, is[2,], type = "c", lty = 1, pch = 4, col = 6)
lines(k, mis[2,], type = "c", lty = 1, pch = 4, col = 6)
plot(k,mis[1,],type="b")
lines(k,mis[2,], type = "c", lty = 1, pch = 4, col = 6)
plot(k,mis[1,],type="b")
lines(k,mis[2,], type = "c", lty = 1, pch = 4, col = 6)
plot(k,mis[1,],type="b")
lines(k,mis[2,], type = "b", lty = 1, pch = 4, col = 6)
lines(k,mis[2,], type = "a", lty = 1, pch = 4, col = 6)
plot(k,mis[1,],type="b")
lines(k,mis[2,], type = "a", lty = 1, pch = 4, col = 6)
plot(k,mis[1,],type="b")
lines(k,mis[2,], type = "b", lty = 1, pch = 4, col = 6)
plot(k,mis[1,],type="l")
lines(k,mis[2,], type = "b", lty = 1, pch = 4, col = 6)
plot(k,mis[1,],type="l")
lines(k,mis[2,], type = "o", lty = 1, pch = 4, col = 6)
plot(k,mis[1,],type="b")
lines(k,mis[2,], type = "o", lty = 1, pch = 4, col = 6)
plot(k,mis[1,],type="o",lty=1,pch=0,col=1)
lines(k,mis[2,], type = "o", lty = 2, pch = 1, col = 2)
lines(k,mis[3,], type = "o", lty = 3, pch = 2, col = 3)
lines(k,mis[4,], type = "o", lty = 4, pch = 3, col = 4)
lines(k,mis[5,], type = "o", lty = 5, pch = 4, col = 5)
plot(k,mis[1,],type="o",lty=1,pch=0,col=1)
lines(k,mis[2,], type = "o", lty = 2, pch = 1, col = 2)
lines(k,mis[3,], type = "o", lty = 3, pch = 2, col = 3)
lines(k,mis[4,], type = "o", lty = 4, pch = 3, col = 4)
lines(k,mis[5,], type = "o", lty = 5, pch = 4, col = 5)
title("Misclassified Numbers in 5 Test Set with Different K", cex.main = 1.1)
legend(-1, 1.9, c("set1", "set2", "set3","set4","originalset"), col = c(1,2,3,4,5),
lty = c(1,2,3,4,5), pch = c(0,1,2,3,4), merge = TRUE, bg='gray90')
plot(k,mis[1,],type="o",lty=1,pch=0,col=1)
lines(k,mis[2,], type = "o", lty = 2, pch = 1, col = 2)
lines(k,mis[3,], type = "o", lty = 3, pch = 2, col = 3)
lines(k,mis[4,], type = "o", lty = 4, pch = 3, col = 4)
lines(k,mis[5,], type = "o", lty = 5, pch = 4, col = 5)
title("Misclassified Numbers in 5 Test Set with Different K", cex.main = 1.1)
legend( c("set1", "set2", "set3","set4","originalset"), col = c(1,2,3,4,5),
lty = c(1,2,3,4,5), pch = c(0,1,2,3,4), merge = TRUE, bg='gray90')
plot(k,mis[1,],type="o",lty=1,pch=0,col=1)
lines(k,mis[2,], type = "o", lty = 2, pch = 1, col = 2)
lines(k,mis[3,], type = "o", lty = 3, pch = 2, col = 3)
lines(k,mis[4,], type = "o", lty = 4, pch = 3, col = 4)
lines(k,mis[5,], type = "o", lty = 5, pch = 4, col = 5)
title("Misclassified Numbers in 5 Test Set with Different K", cex.main = 1.1)
legend( c("set1", "set2", "set3","set4","originalset"), col = c(1,2,3,4,5),
lty = c(1,2,3,4,5), pch = c(0,1,2,3,4), merge = TRUE, bg='gray90')
plot(k,mis[1,],type="o",lty=1,pch=0,col=1)
lines(k,mis[2,], type = "o", lty = 2, pch = 1, col = 2)
lines(k,mis[3,], type = "o", lty = 3, pch = 2, col = 3)
lines(k,mis[4,], type = "o", lty = 4, pch = 3, col = 4)
lines(k,mis[5,], type = "o", lty = 5, pch = 4, col = 5)
title("Misclassified Numbers in 5 Test Set with Different K", cex.main = 1.1)
legend(0,1,c("set1", "set2", "set3","set4","originalset"), col = c(1,2,3,4,5),
lty = c(1,2,3,4,5), pch = c(0,1,2,3,4), merge = TRUE, bg='gray90')
legend(-4,1,c("set1", "set2", "set3","set4","originalset"), col = c(1,2,3,4,5),
lty = c(1,2,3,4,5), pch = c(0,1,2,3,4), merge = TRUE, bg='gray90')
plot(k,mis[1,],type="o",lty=1,pch=0,col=1)
lines(k,mis[2,], type = "o", lty = 2, pch = 1, col = 2)
lines(k,mis[3,], type = "o", lty = 3, pch = 2, col = 3)
lines(k,mis[4,], type = "o", lty = 4, pch = 3, col = 4)
lines(k,mis[5,], type = "o", lty = 5, pch = 4, col = 5)
title("Misclassified Numbers in 5 Test Set with Different K", cex.main = 1.1)
legend(-4,1,c("set1", "set2", "set3","set4","originalset"), col = c(1,2,3,4,5),
lty = c(1,2,3,4,5), pch = c(0,1,2,3,4), merge = TRUE, bg='gray90')
plot(k,mis[1,],type="o",lty=1,pch=0,col=1)
lines(k,mis[2,], type = "o", lty = 2, pch = 1, col = 2)
lines(k,mis[3,], type = "o", lty = 3, pch = 2, col = 3)
lines(k,mis[4,], type = "o", lty = 4, pch = 3, col = 4)
lines(k,mis[5,], type = "o", lty = 5, pch = 4, col = 5)
title("Misclassified Numbers in 5 Test Set with Different K", cex.main = 1.1)
legend(4,-4,c("set1", "set2", "set3","set4","originalset"), col = c(1,2,3,4,5),
lty = c(1,2,3,4,5), pch = c(0,1,2,3,4), merge = TRUE, bg='gray90')
legend(4,4,c("set1", "set2", "set3","set4","originalset"), col = c(1,2,3,4,5),
lty = c(1,2,3,4,5), pch = c(0,1,2,3,4), merge = TRUE, bg='gray90')
plot(k,mis[1,],type="o",lty=1,pch=0,col=1)
lines(k,mis[2,], type = "o", lty = 2, pch = 1, col = 2)
lines(k,mis[3,], type = "o", lty = 3, pch = 2, col = 3)
lines(k,mis[4,], type = "o", lty = 4, pch = 3, col = 4)
lines(k,mis[5,], type = "o", lty = 5, pch = 4, col = 5)
title("Misclassified Numbers in 5 Test Set with Different K", cex.main = 1.1)
legend(4,4,c("set1", "set2", "set3","set4","originalset"), col = c(1,2,3,4,5),
lty = c(1,2,3,4,5), pch = c(0,1,2,3,4), merge = TRUE, bg='gray90')
plot(k,mis[1,],type="o",lty=1,pch=0,col=1)
lines(k,mis[2,], type = "o", lty = 2, pch = 1, col = 2)
lines(k,mis[3,], type = "o", lty = 3, pch = 2, col = 3)
lines(k,mis[4,], type = "o", lty = 4, pch = 3, col = 4)
lines(k,mis[5,], type = "o", lty = 5, pch = 4, col = 5)
title("Misclassified Numbers in 5 Test Set with Different K", cex.main = 1.1)
legend(8,0,c("set1", "set2", "set3","set4","originalset"), col = c(1,2,3,4,5),
lty = c(1,2,3,4,5), pch = c(0,1,2,3,4), merge = TRUE, bg='gray90')
plot(k,mis[1,],type="o",lty=1,pch=0,col=1)
lines(k,mis[2,], type = "o", lty = 2, pch = 1, col = 2)
lines(k,mis[3,], type = "o", lty = 3, pch = 2, col = 3)
lines(k,mis[4,], type = "o", lty = 4, pch = 3, col = 4)
lines(k,mis[5,], type = "o", lty = 5, pch = 4, col = 5)
title("Misclassified Numbers in 5 Test Set with Different K", cex.main = 1.1)
legend(7,1,c("set1", "set2", "set3","set4","originalset"), col = c(1,2,3,4,5),
lty = c(1,2,3,4,5), pch = c(0,1,2,3,4), merge = TRUE, bg='gray90')
plot(k,mis[1,],type="o",lty=1,pch=0,col=1)
lines(k,mis[2,], type = "o", lty = 2, pch = 1, col = 2)
lines(k,mis[3,], type = "o", lty = 3, pch = 2, col = 3)
lines(k,mis[4,], type = "o", lty = 4, pch = 3, col = 4)
lines(k,mis[5,], type = "o", lty = 5, pch = 4, col = 5)
title("Misclassified Numbers in 5 Test Set with Different K", cex.main = 1.1)
legend(0,7,c("set1", "set2", "set3","set4","originalset"), col = c(1,2,3,4,5),
lty = c(1,2,3,4,5), pch = c(0,1,2,3,4), merge = TRUE, bg='gray90')
plot(k,mis[1,],type="o",lty=1,pch=0,col=1)
lines(k,mis[2,], type = "o", lty = 2, pch = 1, col = 2)
lines(k,mis[3,], type = "o", lty = 3, pch = 2, col = 3)
lines(k,mis[4,], type = "o", lty = 4, pch = 3, col = 4)
lines(k,mis[5,], type = "o", lty = 5, pch = 4, col = 5)
title("Misclassified Numbers in 5 Test Set with Different K", cex.main = 1.1)
legend(0,7.5,c("set1", "set2", "set3","set4","originalset"), col = c(1,2,3,4,5),
lty = c(1,2,3,4,5), pch = c(0,1,2,3,4), merge = TRUE, bg='gray90')
#a
plot(k,misclassed,type="b")
#b
plot(log(k),misclassed,type="l")
#c
boxplot(Salary~high_rbi,data=baseball)
library(ISLR)
baseball<-Hitters
#6a
dim(baseball)
#6b
baseball<-na.omit(baseball)
#6c
dim(baseball)
#6d
#263 observations and 20 predictor variables
#6e
summary(baseball)
#6f
pairs(baseball[,1:7])
#6g
#may be correlated: Atbat and Hits
#unlikely correlated:Atbat and Years
#unlikely to be uncorrelated:Atbat and Hits
#6h
baseball$high_rbi<-rep("No",length(baseball$Salary))
baseball$high_rbi[baseball$RBI>75]="Yes"
baseball$high_rbi<-factor(baseball$high_rbi)
#method2
#baseball$high_rbi1<-ifelse(baseball$RBI>75,"Yes","No")
#baseball$high_rbi1<-factor(baseball$high_rbi1)
#baseball$high_rbi==baseball$high_rbi1
#6i
class(baseball$high_rbi)
#6j
dim(baseball)
#6k
percentage<-sum(baseball$high_rbi=="Yes")/dim(baseball)[1]
a<-round(percentage,4)
paste(a*100,"%",sep="")
print("20.15% player have high RBI")
#sca包里有个percent(p, d = 0, sep = " ")
#6l
boxplot(Salary~high_rbi,data=baseball)
baseball$high_run<-rep("Not elite",length(baseball$Runs))
baseball$high_run[baseball$Runs>80&baseball$RBI>75]="Elite"
baseball$high_run<-factor(baseball$high_run)
#6m
percentage<-sum(baseball$high_rbi=="Yes" & baseball$high_run=="Elite")/dim(baseball)[1]
a<-round(percentage,4)
paste(a*100,"%",sep="")
print("11.03% player have high RBI and high Runs")
#6n
boxplot(Salary~high_run,data=baseball)
par(mfrow=c(2,2))
#par(mar=c(1,1,1,1))
hist(baseball$Hits)
hist(baseball$HmRun)
hist(baseball$Runs)
hist(baseball$RBI)
par(mfrow=c(2,2))
par(mar=c(7,1,1,1))
hist(baseball$Hits)
hist(baseball$HmRun)
hist(baseball$Runs)
hist(baseball$RBI)
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
hist(baseball$Hits)
hist(baseball$HmRun)
hist(baseball$Runs)
hist(baseball$RBI)
?hist
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
hist(baseball$Hits,col=lightblue)
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
hist(baseball$Hits,col="lightblue")
hist(baseball$HmRun,col="skyblue")
hist(baseball$Runs,col="blues9")
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
hist(baseball$Hits,col="lightblue")
hist(baseball$HmRun,col="skyblue")
hist(baseball$Runs,col="blue")
hist(baseball$RBI,col="darkblue")
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
hist(baseball$Hits,col="lightblue")
hist(baseball$HmRun,col="skyblue")
hist(baseball$Runs,col="blue1")
hist(baseball$RBI,col="darkblue")
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
hist(baseball$Hits,col="lightblue")
hist(baseball$HmRun,col="skyblue")
hist(baseball$Runs,col="blue1")
hist(baseball$RBI,col="blue2")
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
hist(baseball$Hits,col="lightblue")
hist(baseball$HmRun,col="skyblue")
hist(baseball$Runs,col="blue1")
hist(baseball$RBI,col="blue5")
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
hist(baseball$Hits,col="lightblue")
hist(baseball$HmRun,col="skyblue")
hist(baseball$Runs,col="blue1")
hist(baseball$RBI,col="blue3")
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
hist(baseball$Hits,col="lightblue")
hist(baseball$HmRun,col="skyblue")
hist(baseball$Runs,col="blue1")
hist(baseball$RBI,col="blue4")
#6p
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
hist(baseball$Hits,col="lightblue")
hist(baseball$HmRun,col="blue")
hist(baseball$Runs,col="blue2")
hist(baseball$RBI,col="blue4")
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
hist(baseball$Hits,col="lightblue")
hist(baseball$HmRun,col="blue1")
hist(baseball$Runs,col="blue2")
hist(baseball$RBI,col="blue4")
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
hist(baseball$Hits,col="lightblue")
hist(baseball$HmRun,col="skyblue")
hist(baseball$Runs,col="blue2")
hist(baseball$RBI,col="blue4")
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
hist(baseball$Hits,col="lightblue", breaks = 5)
hist(baseball$HmRun,col="skyblue", breaks = 10)
hist(baseball$Runs,col="blue2", breaks = 15)
hist(baseball$RBI,col="blue4", breaks = 20)
library(caTools)
set.seed(2)
klist = c(1,2,3,4,5,6,7,8,9,10,20,30,40,50)
misclasslist1 = list(c(),c(),c(),c())
for (i in 1:4){
sample1 = sample.split(iris$Sepal.Length, SplitRatio = 0.70)
train1 <- subset(iris, sample1 == TRUE)
test1 <- subset(iris, sample1 == FALSE)
cl1 = train1$Species
set.seed(666)
vector = c()
for (j in 1:length(klist)){
fit = knn(train1[, -5], test1[, -5], cl1, k =klist[j])
misclassified = nrow(test1)-sum(diag(table(test1$Species,fit)))
vector = c(vector,misclassified)
}
misclasslist1[[i]] = vector
}
misclasslist1[[5]] = misclasslist
#For each set, including the original, plot a line that relateskto the number misclassified on a single graph with linear scales.  Distinguish the linesby changing the color, line type and point type; include a legend.
plot(klist,misclasslist1[[1]],col="red",type = "b",ylim=c(0,15))
lines(klist,misclasslist1[[2]],col="green",type = "b")
lines(klist,misclasslist1[[3]],col="blue",type = "b")
lines(klist,misclasslist1[[4]],col="pink",type = "b")
lines(klist,misclasslist1[[5]],col="black",type = "b")
legend("topright",legend=c("sample1","sample2","sample3","sample4","orinigal sample"),pch=c(10,15),col=c("red","green","blue","pink","black"),lwd=3,lty=c(1,2),cex=0.7)
library(datasets)
set.seed(1)
data = iris[sample.int(nrow(iris)),]
train = data[1:100,]
test = data[101:150,]
#b.(5 Points) Use the function knn
library(class)
cl = train$Species
fit = knn(train[, -5], test[, -5], cl, k =3)
table(test$Species,fit)
misclassified = nrow(test)-sum(diag(table(test$Species,fit)))
##4.Do this for k= 1,2,3,4,5,6,7,8,9,10,20,30,40,50.
klist = c(1,2,3,4,5,6,7,8,9,10,20,30,40,50)
misclasslist = c()
cl = train$Species
set.seed(666)
for (i in 1:length(klist)){
fit = knn(train[, -5], test[, -5], cl, k =klist[i])
misclassified = nrow(test)-sum(diag(table(test$Species,fit)))
misclasslist = c(misclasslist,misclassified)
}
print(misclasslist)
#5.(20  Points)Displaying your results is a very important skill.
#a.(5 Points) Plot k against the number misclassified from Question 4 with linear scales.
library(ggplot2)
plot(x=klist,y=misclasslist,type = 'l')
#b.(5 Points) Plot k against the number misclassified from Question 4 with a log scale inkand a linear scale in the number misclassified.
plot(x=log(klist),y=misclasslist,type = 'l')
#c.(10 Points) Reset the seed with set.seed(2)
library(caTools)
set.seed(2)
klist = c(1,2,3,4,5,6,7,8,9,10,20,30,40,50)
misclasslist1 = list(c(),c(),c(),c())
for (i in 1:4){
sample1 = sample.split(iris$Sepal.Length, SplitRatio = 0.70)
train1 <- subset(iris, sample1 == TRUE)
test1 <- subset(iris, sample1 == FALSE)
cl1 = train1$Species
set.seed(666)
vector = c()
for (j in 1:length(klist)){
fit = knn(train1[, -5], test1[, -5], cl1, k =klist[j])
misclassified = nrow(test1)-sum(diag(table(test1$Species,fit)))
vector = c(vector,misclassified)
}
misclasslist1[[i]] = vector
}
misclasslist1[[5]] = misclasslist
#For each set, including the original, plot a line that relateskto the number misclassified on a single graph with linear scales.  Distinguish the linesby changing the color, line type and point type; include a legend.
plot(klist,misclasslist1[[1]],col="red",type = "b",ylim=c(0,15))
lines(klist,misclasslist1[[2]],col="green",type = "b")
lines(klist,misclasslist1[[3]],col="blue",type = "b")
lines(klist,misclasslist1[[4]],col="pink",type = "b")
lines(klist,misclasslist1[[5]],col="black",type = "b")
legend("topright",legend=c("sample1","sample2","sample3","sample4","orinigal sample"),pch=c(10,15),col=c("red","green","blue","pink","black"),lwd=3,lty=c(1,2),cex=0.7)
View(baseball)
#7d
pairs(baseball[,1:7])
plot(baseball$HmRun,baseball$RBI,xlab="HmRun",ylab="RBI")
abline(lm(baseball$RBI ~ baseball$HmRun))
plot(baseball$HmRun,baseball$RBI,xlab="HmRun",ylab="RBI")
abline(lm(baseball$RBI ~ baseball$HmRun))
plot(baseball$AtBat,baseball$Hits,xlab="AtBat",ylab="Hits")
abline(lm(baseball$Hits ~ baseball$AtBat))
plot(baseball$Runs,baseball$RBI,xlab="Runs",ylab="RBI")
abline(lm(baseball$RBI ~ baseball$Runs))
#7d
plot(pairs(baseball[,1:7]))
#After plotting scatterplot and attached linear regression line, I found that
#some predictors are colinear, like HmRun and RBI, AtBat and Hits, RBI and Runs
#The correlation may affact how we build the prediction model.
#7e
library(corrgram)
install.packages("corrgram")
#After plotting scatterplot and attached linear regression line, I found that
#some predictors are colinear, like HmRun and RBI, AtBat and Hits, RBI and Runs
#The correlation may affact how we build the prediction model.
#7e
library(corrgram)
corrgram(baseball,lower.panel=panel.shade,
upper.panel=panel.pie,text.panel=panel.txt,
main="Correlogram of baseball intercorrelations")
#To predict the salary, the predictors should have relationship with the target variable
#in our case, the salary. According to the correlogram, Hits, RBI, Walks,CAtBat,CHits,CHmRun,CRuns,CRBI,CWalks.
fit = lm(Salary~., data = baseball)
summary(fit)
?corrgram
corrgram(baseball,lower.panel=panel.shade,
upper.panel=panel.pie,text.panel=panel.txt,
main="Correlogram of baseball intercorrelations")
